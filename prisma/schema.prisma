// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// detail
model User {
  id_user            Int                @id @default(autoincrement())
  npwp               String?            @unique
  nip                String?            @unique
  email              String             @unique
  username           String             @unique
  password           String
  nama_perusahaan    String
  nama_pic           String
  no_telephone       String
  id_role            Int
  role               mst_role           @relation(fields: [id_role], references: [id_role])
  id_status          Int?
  status_description String?
  status             mst_status?        @relation(fields: [id_status], references: [id_status])
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @default(now()) @updatedAt
  documents          User_Document[]
  sertifikasi        User_Sertifikasi[]
  product            User_Product[]
  pengalaman         User_Pengalaman[]
  penawaran          User_Penawaran[]
  history            User_History[]
  po                 User_PO[]
  accessToken        String?            @db.VarChar(1000)
  refreshToken       String?            @db.VarChar(1000)
}

model User_Document {
  id_document       Int                @id @default(autoincrement())
  id_user           Int
  user              User               @relation(fields: [id_user], references: [id_user])
  nama_document     String
  id_jenis_document Int
  jenis_document    mst_jenis_document @relation(fields: [id_jenis_document], references: [id_jenis_document])
  tanggal_berlaku   DateTime
  tanggal_berakhir  DateTime
  id_status         Int
  status            mst_status         @relation(fields: [id_status], references: [id_status])
  file              String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @default(now()) @updatedAt
}

model User_Sertifikasi {
  id_sertifikasi       Int                   @id @default(autoincrement())
  id_user              Int
  user                 User                  @relation(fields: [id_user], references: [id_user])
  nama_sertifikasi     String
  id_jenis_sertifikasi Int
  jenis_sertifikasi    mst_jenis_sertifikasi @relation(fields: [id_jenis_sertifikasi], references: [id_jenis_sertifikasi])
  tanggal_berlaku      DateTime              @db.Date
  tanggal_berakhir     DateTime              @db.Date
  file                 String
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @default(now()) @updatedAt
}

model User_Product {
  id_product       Int               @id @default(autoincrement())
  id_user          Int
  user             User              @relation(fields: [id_user], references: [id_user])
  brand            String
  price            Decimal
  id_kurs          Int
  kurs             mst_kurs          @relation(fields: [id_kurs], references: [id_kurs])
  stock            Int
  volume           String
  id_satuan        Int
  satuan           mst_satuan        @relation(fields: [id_satuan], references: [id_satuan])
  address          String
  item_image       String
  description      String
  id_jenis_product Int
  jenis_product    mst_jenis_product @relation(fields: [id_jenis_product], references: [id_jenis_product])
  id_provinsi      Int
  provinsi         mst_provinsi      @relation(fields: [id_provinsi], references: [id_provinsi])
  id_kota          Int
  kota             mst_kota          @relation(fields: [id_kota], references: [id_kota])
  company_category String
  storage_type     String
  packaging        String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @default(now()) @updatedAt
  penawaran        User_Penawaran[]
  po               User_PO[]
}

model User_Pengalaman {
  id_pengalaman   Int      @id @default(autoincrement())
  id_user         Int
  user            User     @relation(fields: [id_user], references: [id_user])
  nama_klien      String
  nama_proyek     String
  id_kurs         Int
  kurs            mst_kurs @relation(fields: [id_kurs], references: [id_kurs])
  nilai_proyek    Decimal
  no_kontrak      String
  kontak_klien    String
  tanggal_mulai   DateTime @db.Date
  tanggal_selesai DateTime @db.Date
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now()) @updatedAt
}

model User_Penawaran {
  id_penawaran               Int          @id @default(autoincrement())
  no_penawaran               String       @unique
  id_user                    Int
  user                       User         @relation(fields: [id_user], references: [id_user])
  id_status_proses_penawaran Int
  status_proses_penawaran    mst_status   @relation(name: "StatusProsesPenawaran", fields: [id_status_proses_penawaran], references: [id_status])
  id_status_penawaran        Int
  status_penawaran           mst_status   @relation(name: "StatusPenawaran", fields: [id_status_penawaran], references: [id_status])
  id_product                 Int
  product                    User_Product @relation(fields: [id_product], references: [id_product])
  tanggal_dibuat_penawaran   DateTime
  tanggal_mulai_penawaran    DateTime
  tanggal_berakhir_penawaran DateTime
  Terms_of_Payment           String
  Terms_of_Delivery          String
  description                String
  createdAt                  DateTime     @default(now())
  updatedAt                  DateTime     @default(now()) @updatedAt
  PO                         User_PO[]
}

model User_PO {
  id_po               Int            @id @default(autoincrement())
  no_po               String         @unique
  no_penawaran        String         @unique
  penawaran           User_Penawaran @relation(fields: [no_penawaran], references: [no_penawaran])
  id_user             Int
  user                User           @relation(fields: [id_user], references: [id_user])
  id_product          Int
  product             User_Product   @relation(fields: [id_product], references: [id_product])
  tanggal_dibuat_po   DateTime
  tanggal_mulai_po    DateTime
  tanggal_berakhir_po DateTime
  Terms_of_Payment    String
  Terms_of_Delivery   String
  description         String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @default(now()) @updatedAt
}

model User_History {
  id_history Int        @id @default(autoincrement())
  id_status  Int
  status     mst_status @relation(fields: [id_status], references: [id_status])
  id_user    Int
  user       User       @relation(fields: [id_user], references: [id_user])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now()) @updatedAt
}

// master
model mst_role {
  id_role   Int      @id @default(autoincrement())
  nama_role String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  users     User[]
}

model mst_jenis_document {
  id_jenis_document Int             @id @default(autoincrement())
  nama_document     String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @default(now()) @updatedAt
  detail_document   User_Document[]
}

model mst_jenis_sertifikasi {
  id_jenis_sertifikasi Int                @id @default(autoincrement())
  nama_sertifikasi     String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @default(now()) @updatedAt
  detail_sertifikasi   User_Sertifikasi[]
}

model mst_satuan {
  id_satuan   Int            @id @default(autoincrement())
  nama_satuan String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  product     User_Product[]
}

model mst_kurs {
  id_kurs    Int               @id @unique @default(autoincrement())
  nama_kurs  String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @default(now()) @updatedAt
  pengalaman User_Pengalaman[]
  product    User_Product[]
}

model mst_jenis_product {
  id_jenis_product   Int            @id @unique @default(autoincrement())
  nama_jenis_product String
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @default(now()) @updatedAt
  product            User_Product[]
}

model mst_status {
  id_status        Int              @id @default(autoincrement())
  kode_status      String           @unique
  nama_status      String
  group_status     String
  keterangan       String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now()) @updatedAt
  document         User_Document[]
  penawaran        User_Penawaran[] @relation(name: "StatusPenawaran")
  proses_penawaran User_Penawaran[] @relation(name: "StatusProsesPenawaran")
  user             User[]
  history          User_History[]
}

model mst_provinsi {
  id_provinsi   Int            @id @unique @default(autoincrement())
  nama_provinsi String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  product       User_Product[]
  kota          mst_kota[]
}

model mst_kota {
  id_kota     Int            @id @unique @default(autoincrement())
  id_provinsi Int
  provinsi    mst_provinsi   @relation(fields: [id_provinsi], references: [id_provinsi])
  nama_kota   String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @default(now()) @updatedAt
  product     User_Product[]
}
